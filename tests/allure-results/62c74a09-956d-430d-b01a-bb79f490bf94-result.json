{"name": "test_add_photo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=134.0.6998.37)\nStacktrace:\n\tGetHandleVerifier [0x011EB5A3+24387]\n\t(No symbol) [0x01175904]\n\t(No symbol) [0x01050753]\n\t(No symbol) [0x0102F83E]\n\t(No symbol) [0x010C454E]\n\t(No symbol) [0x010DEA19]\n\t(No symbol) [0x010BD646]\n\t(No symbol) [0x0108C59F]\n\t(No symbol) [0x0108D8E4]\n\tGetHandleVerifier [0x014ED883+3179043]\n\tGetHandleVerifier [0x01506CF9+3282585]\n\tGetHandleVerifier [0x0150167C+3260444]\n\tGetHandleVerifier [0x01284330+650448]\n\t(No symbol) [0x0117ED0D]\n\t(No symbol) [0x0117BAF8]\n\t(No symbol) [0x0117BC99]\n\t(No symbol) [0x0116E530]\n\tBaseThreadInitThunk [0x777E5D49+25]\n\tRtlInitializeExceptionChain [0x77E4CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x77E4CDC1+561]", "trace": "browser = <pages.base_page.BasePage object at 0x0000017CB3721280>, employee_id = {'id': '048127771a'}\n\n    @allure.feature(\"Add photo\")\n    @allure.story(\"Add photo\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_add_photo(browser, employee_id):\n        login_page = LoginPage(browser.browser)  # Use browser.browser for WebDriver\n        side_bar = SideBar(browser.browser)\n        pim_page = PimPage(browser.browser)\n        employee_list_page = EmployeeListPage(browser.browser)\n        personal_details_page = PersonalDetailsPage(browser.browser)\n    \n        with allure.step(\"login\"):\n            login_page.open()\n>           login_page.enter_username(\"Admin\")\n\ntest_add_photo_Copy.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\login_page.py:17: in enter_username\n    self.enter_text(LOGIN_INPUT_FIELD, username)\n..\\pages\\base_page.py:32: in enter_text\n    element = WebDriverWait(self.browser, 10).until(EC.presence_of_element_located(locator))\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:84: in _predicate\n    return driver.find_element(*locator)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:770: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000017CB3722120>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77E4CE3B+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77E4CDC1+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=134.0.6998.37)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x011EB5A3+24387]\nE       \t(No symbol) [0x01175904]\nE       \t(No symbol) [0x01050753]\nE       \t(No symbol) [0x0102F83E]\nE       \t(No symbol) [0x010C454E]\nE       \t(No symbol) [0x010DEA19]\nE       \t(No symbol) [0x010BD646]\nE       \t(No symbol) [0x0108C59F]\nE       \t(No symbol) [0x0108D8E4]\nE       \tGetHandleVerifier [0x014ED883+3179043]\nE       \tGetHandleVerifier [0x01506CF9+3282585]\nE       \tGetHandleVerifier [0x0150167C+3260444]\nE       \tGetHandleVerifier [0x01284330+650448]\nE       \t(No symbol) [0x0117ED0D]\nE       \t(No symbol) [0x0117BAF8]\nE       \t(No symbol) [0x0117BC99]\nE       \t(No symbol) [0x0116E530]\nE       \tBaseThreadInitThunk [0x777E5D49+25]\nE       \tRtlInitializeExceptionChain [0x77E4CE3B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E4CDC1+561]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchWindowException"}, "steps": [{"name": "login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=134.0.6998.37)\nStacktrace:\n\tGetHandleVerifier [0x011EB5A3+24387]\n\t(No symbol) [0x01175904]\n\t(No symbol) [0x01050753]\n\t(No symbol) [0x0102F83E]\n\t(No symbol) [0x010C454E]\n\t(No symbol) [0x010DEA19]\n\t(No symbol) [0x010BD646]\n\t(No symbol) [0x0108C59F]\n\t(No symbol) [0x0108D8E4]\n\tGetHandleVerifier [0x014ED883+3179043]\n\tGetHandleVerifier [0x01506CF9+3282585]\n\tGetHandleVerifier [0x0150167C+3260444]\n\tGetHandleVerifier [0x01284330+650448]\n\t(No symbol) [0x0117ED0D]\n\t(No symbol) [0x0117BAF8]\n\t(No symbol) [0x0117BC99]\n\t(No symbol) [0x0116E530]\n\tBaseThreadInitThunk [0x777E5D49+25]\n\tRtlInitializeExceptionChain [0x77E4CE3B+107]\n\tRtlGetAppContainerNamedObjectPath [0x77E4CDC1+561]\n\n", "trace": "  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\tests\\test_add_photo_Copy.py\", line 22, in test_add_photo\n    login_page.enter_username(\"Admin\")\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\pages\\login_page.py\", line 17, in enter_username\n    self.enter_text(LOGIN_INPUT_FIELD, username)\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\pages\\base_page.py\", line 32, in enter_text\n    element = WebDriverWait(self.browser, 10).until(EC.presence_of_element_located(locator))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 84, in _predicate\n    return driver.find_element(*locator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 770, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\atovmasyan\\PycharmProjects\\PortfolioProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1741694184259, "stop": 1741694187099}], "start": 1741694184259, "stop": 1741694187101, "uuid": "cc221050-4a1a-47b3-a6f1-748ee605d114", "historyId": "9438207173c85476930d5af9cd9d32d1", "testCaseId": "9438207173c85476930d5af9cd9d32d1", "fullName": "test_add_photo_Copy#test_add_photo", "labels": [{"name": "feature", "value": "Add photo"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "Add photo"}, {"name": "suite", "value": "test_add_photo_Copy"}, {"name": "host", "value": "DESKTOP-B3OP8E2"}, {"name": "thread", "value": "25364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_add_photo_Copy"}]}